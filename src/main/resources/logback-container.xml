<?xml version="1.0" encoding="UTF-8"?>
<configuration>
  <!-- Don't log messages and errors when loading properties files, and they can't be found-->
  <statusListener class="ch.qos.logback.core.status.NopStatusListener"/>

  <property resource="application.properties"/>

  <!-- Note! This file is used when run in the container and will override the default logback.xml. -->

  <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
    <encoder class="net.logstash.logback.encoder.LogstashEncoder">
      <!-- Writes object values from logging context as actual JSON (not escaped) -->
      <mdcEntryWriter class="no.liflig.logging.output.logback.JsonContextFieldWriter"/>

      <!-- Apply to all logs. The service and version are important for some services like Datadog. -->
      <customFields>{"service":"${service.name}","version":"${service.version}"}</customFields>

      <!-- Default timestamp pattern includes the server's timezone. We always want timestamps in UTC -->
      <timestampPattern>[ISO_INSTANT]</timestampPattern>

      <fieldNames>
        <!-- Default timestamp field is "@timestamp". This clashes with CloudWatch, so we change it to "timestamp" -->
        <timestamp>timestamp</timestamp>
        <!-- Logstash log format version. We don't need this, so we remove it with [ignore] -->
        <version>[ignore]</version>
        <!-- Logback integer level value. We just use "level", so we remove this with [ignore] -->
        <levelValue>[ignore]</levelValue>
      </fieldNames>
    </encoder>
  </appender>

  <logger name="org.eclipse.jetty" level="WARN"/>
  <logger name="${service.package.prefix}" level="DEBUG"/>

  <root level="INFO">
    <appender-ref ref="STDOUT"/>
  </root>
</configuration>
