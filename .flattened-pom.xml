<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <groupId>no.liflig</groupId>
  <artifactId>user-roles</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>user-roles</name>
  <scm>
    <connection>scm:git:https://github.com/capralifecycle/user-roles.git</connection>
    <developerConnection>scm:git:https://github.com/capralifecycle/user-roles.git</developerConnection>
    <url>https://github.com/capralifecycle/user-roles</url>
  </scm>
  <properties>
    <sonar.projectName>user-roles</sonar.projectName>
    <kotlin.version>1.8.10</kotlin.version>
    <sonar.host.url>https://sonarcloud.io</sonar.host.url>
    <flatten-maven-plugin.version>1.3.0</flatten-maven-plugin.version>
    <sonar-maven-plugin.version>3.9.1.2184</sonar-maven-plugin.version>
    <aws-sdk-v2.version>2.17.102</aws-sdk-v2.version>
    <maven-javadoc-plugin.version>3.5.0</maven-javadoc-plugin.version>
    <maven-antrun-plugin.version>3.0.0</maven-antrun-plugin.version>
    <junit.version>5.9.2</junit.version>
    <flyway-core.version>9.15.1</flyway-core.version>
    <kotlin-logging-jvm.version>3.0.4</kotlin-logging-jvm.version>
    <maven-jar-plugin.version>3.3.0</maven-jar-plugin.version>
    <testcontainers.postgresql.version>1.17.6</testcontainers.postgresql.version>
    <maven-shade-plugin.version>3.4.1</maven-shade-plugin.version>
    <maven-compiler-plugin.version>3.11.0</maven-compiler-plugin.version>
    <logstash-logback-encoder.version>7.3</logstash-logback-encoder.version>
    <maven-clean-plugin.version>3.2.0</maven-clean-plugin.version>
    <liflig-http4k-utils.version>1.20230210.194859</liflig-http4k-utils.version>
    <maven-enforcer-plugin.version>3.2.1</maven-enforcer-plugin.version>
    <maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>
    <awssdk.version>2.17.102</awssdk.version>
    <postgresql.version>42.5.4</postgresql.version>
    <maven-resources-plugin.version>3.3.0</maven-resources-plugin.version>
    <maven-install-plugin.version>3.1.0</maven-install-plugin.version>
    <maven-enforcer-required-maven-version>3.6</maven-enforcer-required-maven-version>
    <liflig-logging-http4k.version>1.20230227.224948</liflig-logging-http4k.version>
    <maven-release-plugin.version>2.5.3</maven-release-plugin.version>
    <maven-source-plugin.version>3.2.1</maven-source-plugin.version>
    <slf4j-api.version>2.0.6</slf4j-api.version>
    <maven.build.timestamp.format>yyyy-MM-dd'T'HH:mm:ss'Z'</maven.build.timestamp.format>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <arrow.version>1.1.5</arrow.version>
    <jacoco-maven-plugin.version>0.8.8</jacoco-maven-plugin.version>
    <maven-deploy-plugin.version>3.1.0</maven-deploy-plugin.version>
    <timestamp>${maven.build.timestamp}</timestamp>
    <http4k.version>4.34.3.0</http4k.version>
    <maven-failsafe-plugin.version>2.22.2</maven-failsafe-plugin.version>
    <java.version>11</java.version>
    <sonar.organization>capralifecycle</sonar.organization>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <liflig.properties.version>2.20230214.071539</liflig.properties.version>
    <hikariCP.version>5.0.1</hikariCP.version>
    <maven-assembly-plugin.version>3.5.0</maven-assembly-plugin.version>
    <jdbi3-core.version>3.37.1</jdbi3-core.version>
    <sonar.projectKey>capralifecycle_user-roles</sonar.projectKey>
    <kotlinx-coroutines-slf4j.version>1.6.4</kotlinx-coroutines-slf4j.version>
    <liflig-document-store.version>1.20230304.084157</liflig-document-store.version>
    <liflig-snapshot-test.version>1.20230303.131107</liflig-snapshot-test.version>
    <logback-classic.version>1.4.5</logback-classic.version>
    <maven-site-plugin.version>3.12.1</maven-site-plugin.version>
  </properties>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.http4k</groupId>
        <artifactId>http4k-bom</artifactId>
        <version>${http4k.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>software.amazon.awssdk</groupId>
        <artifactId>bom</artifactId>
        <version>2.17.102</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-bom</artifactId>
        <version>${kotlin.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>no.liflig</groupId>
      <artifactId>liflig-http4k-utils</artifactId>
      <version>${liflig-http4k-utils.version}</version>
    </dependency>
    <dependency>
      <groupId>no.liflig</groupId>
      <artifactId>properties</artifactId>
      <version>${liflig.properties.version}</version>
    </dependency>
    <dependency>
      <groupId>no.liflig</groupId>
      <artifactId>liflig-document-store</artifactId>
      <version>${liflig-document-store.version}</version>
    </dependency>
    <dependency>
      <groupId>no.liflig</groupId>
      <artifactId>liflig-logging-http4k</artifactId>
      <version>${liflig-logging-http4k.version}</version>
    </dependency>
    <dependency>
      <groupId>no.liflig</groupId>
      <artifactId>snapshot-test</artifactId>
      <version>${liflig-snapshot-test.version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j-api.version}</version>
    </dependency>
    <dependency>
      <groupId>org.http4k</groupId>
      <artifactId>http4k-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.http4k</groupId>
      <artifactId>http4k-format-jackson</artifactId>
    </dependency>
    <dependency>
      <groupId>org.http4k</groupId>
      <artifactId>http4k-server-jetty</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jetbrains.kotlin</groupId>
      <artifactId>kotlin-stdlib-jdk8</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jetbrains.kotlinx</groupId>
      <artifactId>kotlinx-coroutines-slf4j</artifactId>
      <version>${kotlinx-coroutines-slf4j.version}</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>${logback-classic.version}</version>
    </dependency>
    <dependency>
      <groupId>net.logstash.logback</groupId>
      <artifactId>logstash-logback-encoder</artifactId>
      <version>${logstash-logback-encoder.version}</version>
    </dependency>
    <dependency>
      <groupId>io.arrow-kt</groupId>
      <artifactId>arrow-core-jvm</artifactId>
      <version>${arrow.version}</version>
    </dependency>
    <dependency>
      <groupId>com.zaxxer</groupId>
      <artifactId>HikariCP</artifactId>
      <version>${hikariCP.version}</version>
    </dependency>
    <dependency>
      <groupId>org.flywaydb</groupId>
      <artifactId>flyway-core</artifactId>
      <version>${flyway-core.version}</version>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>${postgresql.version}</version>
    </dependency>
    <dependency>
      <groupId>org.jdbi</groupId>
      <artifactId>jdbi3-core</artifactId>
      <version>${jdbi3-core.version}</version>
    </dependency>
    <dependency>
      <groupId>org.jetbrains.kotlin</groupId>
      <artifactId>kotlin-reflect</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.awaitility</groupId>
      <artifactId>awaitility-kotlin</artifactId>
      <version>4.2.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>postgresql</artifactId>
      <version>${testcontainers.postgresql.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <repositories>
    <repository>
      <id>github</id>
      <url>https://maven.pkg.github.com/capralifecycle/*</url>
    </repository>
  </repositories>
  <build>
    <sourceDirectory>src/main/kotlin</sourceDirectory>
    <testSourceDirectory>src/test/kotlin</testSourceDirectory>
    <resources>
      <resource>
        <filtering>false</filtering>
        <directory>src/main/resources</directory>
      </resource>
      <resource>
        <filtering>true</filtering>
        <directory>src/main/resources-filtered</directory>
      </resource>
    </resources>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>${maven-assembly-plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>${maven-clean-plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven-compiler-plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>${maven-deploy-plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>${maven-install-plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${maven-jar-plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>${maven-javadoc-plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-release-plugin</artifactId>
          <version>${maven-release-plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${maven-resources-plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-shade-plugin</artifactId>
          <version>${maven-shade-plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>${maven-site-plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-source-plugin</artifactId>
          <version>${maven-source-plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven-surefire-plugin.version}</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>${maven-enforcer-plugin.version}</version>
        <executions>
          <execution>
            <id>enforce-maven</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <version>${maven-enforcer-required-maven-version}</version>
                </requireMavenVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>flatten-maven-plugin</artifactId>
        <version>${flatten-maven-plugin.version}</version>
        <executions>
          <execution>
            <id>flatten</id>
            <phase>process-resources</phase>
            <goals>
              <goal>flatten</goal>
            </goals>
          </execution>
          <execution>
            <id>flatten.clean</id>
            <phase>clean</phase>
            <goals>
              <goal>clean</goal>
            </goals>
          </execution>
        </executions>
        <inherited>false</inherited>
        <configuration>
          <updatePomFile>true</updatePomFile>
          <flattenMode>resolveCiFriendliesOnly</flattenMode>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${maven-failsafe-plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.sonarsource.scanner.maven</groupId>
        <artifactId>sonar-maven-plugin</artifactId>
        <version>${sonar-maven-plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco-maven-plugin.version}</version>
        <executions>
          <execution>
            <id>jacoco-initialize</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration></configuration>
          </execution>
          <execution>
            <id>jacoco-site</id>
            <phase>package</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <formats>
                <format>XML</format>
              </formats>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-shade-plugin</artifactId>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <finalName>app</finalName>
              <createDependencyReducedPom>false</createDependencyReducedPom>
              <filters>
                <filter>
                  <artifact>*:*</artifact>
                  <excludes>
                    <exclude>*module-info.class</exclude>
                    <exclude>META-INF/*.SF</exclude>
                    <exclude>META-INF/*.DSA</exclude>
                    <exclude>META-INF/*.RSA</exclude>
                    <exclude>META-INF/LICENSE.txt</exclude>
                    <exclude>META-INF/LICENSE</exclude>
                    <exclude>META-INF/MANIFEST.MF</exclude>
                    <exclude>META-INF/NOTICE</exclude>
                    <exclude>META-INF/NOTICE.txt</exclude>
                    <exclude>META-INF/io.netty.versions.properties</exclude>
                    <exclude>META-INF/kotlinx_coroutines_core.version</exclude>
                    <exlude>META-INF/maven/com.fasterxml.jackson.core/jackson-core/pom.properties</exlude>
                    <exclude>META-INF/maven/com.fasterxml.jackson.core/jackson-core/pom.xml</exclude>
                    <exclude>META-INF/kotlinx-serialization-json.kotlin_module</exclude>
                    <exclude>META-INF/DEPENDENCIES</exclude>
                  </excludes>
                </filter>
              </filters>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <manifestEntries>
                    <Main-Class>no.liflig.userroles.MainKt</Main-Class>
                  </manifestEntries>
                </transformer>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
              </transformers>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>compile</id>
            <phase>compile</phase>
            <goals>
              <goal>compile</goal>
            </goals>
            <configuration>
              <sourceDirs>
                <sourceDir>${project.basedir}/src/main/kotlin</sourceDir>
              </sourceDirs>
            </configuration>
          </execution>
          <execution>
            <id>test-compile</id>
            <goals>
              <goal>test-compile</goal>
            </goals>
            <configuration>
              <sourceDirs>
                <sourceDir>${project.basedir}/src/test/kotlin</sourceDir>
              </sourceDirs>
            </configuration>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-maven-serialization</artifactId>
            <version>${kotlin.version}</version>
          </dependency>
        </dependencies>
        <configuration>
          <jvmTarget>${java.version}</jvmTarget>
          <compilerPlugins>
            <plugin>kotlinx-serialization</plugin>
          </compilerPlugins>
          <args>
            <arg>-Xuse-experimental=kotlin.time.ExperimentalTime</arg>
          </args>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.github.gantsign.maven</groupId>
        <artifactId>ktlint-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>check</id>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>gh-actions-build</id>
      <properties>
        <build.branch>${env.BRANCH_NAME}</build.branch>
        <build.timestamp>${timestamp}</build.timestamp>
        <build.commit>${env.GIT_COMMIT_ID}</build.commit>
      </properties>
    </profile>
  </profiles>
</project>
