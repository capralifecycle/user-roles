name: ci
on:
  push:
    branches: "**"

defaults:
  run:
    shell: bash --noprofile --norc -euo pipefail {0}

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

# NOTE: Set concurrency for the current workflow to 1
concurrency: ci-${{ github.ref }}-${{ github.workflow }}

jobs:
  build-and-deploy:
    timeout-minutes: 60
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - uses: capralifecycle/actions-lib/check-runtime-dependencies@b4bb65b0ab41499f4829fe99c4b33b0b5a363562 # v1.6.2

      - uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4.7.1
        with:
          distribution: "zulu"
          java-version: "21.0.6"
          java-package: jdk

      - uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: store branch name in environment
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF##*/})" >> "$GITHUB_ENV"

      - name: build and test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GIT_COMMIT_ID: ${{ env.GITHUB_SHA }}
          BRANCH_NAME: ${{ env.GITHUB_REF_NAME }}
        run: |
          mvn -B verify -P gh-actions-build -DGIT_COMMIT_ID="$GIT_COMMIT_ID" -DBRANCH_NAME="$BRANCH_NAME"
          mvn sonar:sonar

      - name: show errors
        if: ${{ failure() }}
        env:
          FAILS_FILE: ${{ runner.temp }}/fails.txt
        run: |
          echo '## Build failure  ' >> $GITHUB_STEP_SUMMARY
          { find . -type f -path '*target/surefire-reports/*.txt' -exec grep -l -E '(Failures: [^0]|Errors: [^0])' {} >> "${FAILS_FILE}" \; || :; }
          { find . -type f -path '*target/failsafe-reports/*.txt' -exec grep -l -E '(Failures: [^0]|Errors: [^0])' {} >> "${FAILS_FILE}" \; || :; }

          while IFS="" read -r errorFile || [ -n "$errorFile" ]; do
            echo "**${errorFile}**  " >> $GITHUB_STEP_SUMMARY
            echo '```text' >> $GITHUB_STEP_SUMMARY
            cat "${errorFile}" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            echo '---' >> $GITHUB_STEP_SUMMARY
          done < "${FAILS_FILE}"

      - name: Generate custom tag for release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        id: get-custom-tag
        run: |
          export MAVEN_OPTS="-Duser.home=$HOME" # Home directory not automatically picked up for some reason
          major_version="$(sed -n "s/^.*<major-version>\([0-9]\{1,\}\)<\/major-version>.*$/\1/p" pom.xml)"
          date="$(date -u "+%Y%m%d.%H%M%S")"
          tag="$major_version.$date"
          printf "Tag to use for potential release: %s\n" "$tag"
          echo "tag=$tag" >> $GITHUB_OUTPUT
        if: ${{ github.ref == 'refs/heads/master' }}
      - name: Log in to the Container registry
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ github.ref == 'refs/heads/master' }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
        if: ${{ github.ref == 'refs/heads/master' }}
      - name: Build and push Docker image
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        if: ${{ github.ref == 'refs/heads/master' }}
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.get-custom-tag.outputs.tag }}
