name: ci
on:
  push:
    branches: "**"

defaults:
  run:
    shell: bash --noprofile --norc -euo pipefail {0}

jobs:
  get-runner-user:
    runs-on: ubuntu-20.04
    outputs:
      uid_gid: ${{ steps.get-user.outputs.uid_gid }}
    steps:
      - id: get-user
        run: echo "uid_gid=$(id -u):$(id -g)" >> "$GITHUB_OUTPUT"
  build-and-deploy:
    needs: get-runner-user
    runs-on: ubuntu-20.04
    container:
      image: "public.ecr.aws/z8l5l4v4/buildtools/tool/node:18"
      options: --user ${{ needs.get-runner-user.outputs.uid_gid }}
    permissions:
      contents: read
      packages: read
      id-token: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: maven-
      - name: store branch name in environment
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF##*/})" >> "$GITHUB_ENV"
      - name: configure maven
        run: |
          mkdir -p "$HOME/.m2"
          cat <<EOF > "$HOME/.m2/settings.xml"
          <?xml version="1.0" encoding="UTF-8"?>
          <settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0
                                https://maven.apache.org/xsd/settings-1.0.0.xsd">
            <servers>
              <server>
                <id>github</id>
                <username>\${env.GITHUB_ACTOR}</username>
                <password>\${env.GITHUB_TOKEN}</password>
              </server>
            </servers>
          </settings>
          EOF
      - name: build and analyze
        uses: "docker://public.ecr.aws/z8l5l4v4/buildtools/tool/maven:3-jdk-11-debian"
        with:
          args: 'bash -c "set -euo pipefail; export MAVEN_OPTS=\"-Duser.home=$HOME\"; mvn -B verify -P gh-actions-build -DGIT_COMMIT_ID="$GIT_COMMIT_ID" -DBRANCH_NAME="$BRANCH_NAME""'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GIT_COMMIT_ID: ${{ env.GITHUB_SHA }}
          BRANCH_NAME: ${{ env.GITHUB_REF_NAME }}
